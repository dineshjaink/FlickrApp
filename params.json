{"name":"Flickr Search","tagline":"Flickr Search made easy","body":"Tasks:\r\n-\tFix so the design of the images is like the attached picture in the root folder (preview.jpg)\r\n-\tImplement so you can click on the Share link and retrieve a full page that is SEO friendly\r\n-\tStyle the share link so that it looks like the button in the preview\r\n-\tAdd some kind of status when the AJAX is running, something like \"Requesting, Retrieving\"\r\n-\tDisplay whatever the pictures are retrieved from the cache or not, like \"Loaded from cache / Loaded from flickr\"\r\n-\tImplement so the cache helper (CacheHelper.cs) has support for both reference types and value types\r\n-\tIn HomeController, add a feature so you can select between FlickrCacheableRepository or FlickrRepository by some configuration flag, create a solution that are easy to extend so you can have N numbers of repositories\r\n-\tChange HomeController's GetImage method only to allow POST request, update the JavaScript so the functionality still work\r\n-\tNew images should fade in when they are added to the DOM, focus only on the image so each of the images loads smoothly and are display ready.\r\n-\tStyle the application to look like the attached preview (background image found in the root of the Demo folder)\r\n-\tCreate a responsive layout so that the application looks good in all resolutions (1 image per row in mobile, 5 on tablet and 10 on high resolution computers)\r\n\r\n\r\nCompleted Tasks:\r\n\r\n1. Styling: \r\n\r\n   - Styling of the Page as per the attached preview. Used bootstrap and custom styling to give it the look and feel as required.\r\n   - Responsive layout handled and that the application looks good.\r\n   - Click on images, enlarge them and also navigate without going back to the application.\r\n   - Added a loader when the search is being triggered until the images gets listed.\r\n   - Dynamic HTML and stylesheet when images are received from Flickr API.\r\n   - Using jQuery Fancy box library for enlarging the image on click of it.\r\n   - Share Button can be nade SEO friendly, bot implemented as part of this.\r\n   - Spinner loads whenever the images are being retrieved.\r\n   - Image fading as part of Fancy Box used.\r\n   \r\n\r\n2. Repository Selection:\r\n   \r\n   - Implemented the feature of selecting the repository using the design pattern - Dependency Injection.\r\n   - Used Unity.Mvc4 for injecting and resolving the dependencies.\r\n   - The dependencies are configured in the web.config, which makes the change of repository when required easier.\r\n\t eg:\r\n\t <register type=\"FlickrApp.Repository.IRepository, FlickrApp\" mapTo=\"FlickrApp.Repository.FlickrCacheableRepository, FlickrApp\" /> \r\n   - Modified the controller so that repository dependencies can be injected and can be used.\r\n   - The same dependecies can be injected from the bootstrapper code. \r\n     Eg below:\r\n\t container.RegisterType<IRepository, FlickrCacheableRepository>();\r\n   - This feature is extendable and any repositories can be injected and used on run time. No / Minimal code change is required.\r\n   - This pattern can also be implemented with different Libraries that are available for dependency injection like AutoFacade.\r\n\t \r\n3. Controller Changes:\r\n\r\n   - Decorated the Home Controller with HttpPost attribute, so that it only allows POST request.\r\n   - Modified the Ajax call to do a POST request instead of GET.   \r\n   - Bundled all the css and JavaScripts required as part of BundleConfig.\r\n   \r\n4. CacheHelper:\r\n   \r\n   - CacheHelper can be modified from using HttpCache to memory cache, not implemented as part of this assignment.\r\n   \r\n5. Miscellaneous:\r\n   - Tested the application in IISExpress that comes part of Visual Studio.\r\n   - Hosted the application in localhost and verified that minification of JavaScript and CSS happens.\r\n   - Created a repository on GitHub so that the code can be easily shared and maintained. \r\n   \r\n   \r\n   \r\n   ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}